AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  AwsBillingNotificationLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: aws-billing-notification
      Runtime: provided
      Handler: bootstrap
      CodeUri: target/rust.zip
      Role: !GetAtt AwsBillingNotificationIamRole.Arn
      Timeout: 10
      MemorySize: 256
      Environment:
        Variables:
          RUST_BACKTRACE: 1
          AWS_SSM_REGION: !Sub '${AWS::Region}'
  AwsBillingNotificationIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action:
            - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess
      Policies:
        - PolicyName: SsmParameterStoreAccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              Effect: Allow
              Action:
                - 'ssm:GetParameter*'
              Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/billing-notification/*'

  AwsBillingNotificationEventRule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: 'cron(0 1 * * ? *)'
      State: ENABLED
      Targets:
        - Arn: !GetAtt AwsBillingNotificationLambda.Arn
          Id: AwsBillingNotificationLambdaId
  AwsBillingNotificationEventPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref AwsBillingNotificationLambda
      Principal: events.amazonaws.com
      SourceArn: !GetAtt AwsBillingNotificationEventRule.Arn
